name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag coolplaylin-bot
  analyze:
    name: Code Analysis Scanning
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: python
    - name: AutoBuild - python
      uses: github/codeql-action/autobuild@v2
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:python"
  test:
    name: Python Test and Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Python 3.11.0
      uses: actions/setup-python@v4
      with:
        python-version: "3.11.0"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
        mkdir Report
    - name: Lint with flake8
      run: |
        python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics >> Report/Report1.txt
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics >> Report/Report2.txt
    - name: Upload Report
      uses: actions/upload-artifact@v3.1.2
      with:
        name: Report
        path: Report/*